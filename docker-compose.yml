# docker-compose build && docker-compose up -d
version: "3.7"

volumes:
  ckan_data:
  pg_data:
  solr_data:

services:
  ckan:
    container_name: ckan
    build:
      context: .
      dockerfile: docker/ckan/Dockerfile
      args:
        - CKAN__PLUGINS
    networks:
      - frontend
      - backend
    depends_on:
      - db
    ports:
      - "0.0.0.0:${CKAN_PORT}:5000"
    env_file:
      - ./.ckan.env
    environment:
      - CKAN_SQLALCHEMY_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/ckan
      - CKAN_DATASTORE_WRITE_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/datastore
      - CKAN_DATASTORE_READ_URL=postgresql://datastore_ro:${DATASTORE_READONLY_PASSWORD}@db/datastore
      - CKAN_SOLR_URL=http://solr:8983/solr/ckan
      - CKAN_REDIS_URL=redis://redis:6379/1
      - CKAN_SITE_URL=${CKAN_SITE_URL}
      - CKAN_MAX_UPLOAD_SIZE_MB=${CKAN_MAX_UPLOAD_SIZE_MB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
    volumes:
      - ckan_data:/srv/app/data
      - ./docker/ckan/docker-entrypoint.d:/srv/app/docker-entrypoint.d

  db:
    container_name: db
    build:
      context: ./docker
      dockerfile: postgresql/Dockerfile
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ckan"]

  solr:
    container_name: solr
    build:
      context: ./docker
      dockerfile: solr/Dockerfile
      args:
        - CKAN_VERSION=${CKAN_VERSION}
    networks:
      - backend
    volumes:
      - solr_data:/opt/solr/server/solr/ckan/data/

  redis:
    container_name: redis
    image: redis:${REDIS_VERSION}
    networks:
      - backend

networks:
  frontend:
  backend:
